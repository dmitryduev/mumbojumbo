name: Cut Release
run-name: cut sdk release triggered by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      bump-version-kind:
        type: choice
        required: true
        description: How to bump the current version
        default: devkind
        options:
          - "major"
          - "minor"
          - "patch"
          - "dev"
          - "devkind"
          - "pre"
          - "prekind"

jobs:
  freeze:
    name: Freeze main branch
    runs-on: ubuntu-latest
    steps:
      - name: Freeze main branch
        run: |
          curl -d "frozen=true&user_name=${{ github.actor }}&note=prep for release" -X POST https://www.mergefreeze.com/api/branches/${{ github.repository }}/main/?access_token=${{ secrets.COLDBEAR_TOKEN }}

  test-nightly:
    name: Run nightly tests
    needs: freeze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout wandb/wandb
        uses: actions/checkout@v3
        with:
          repository: wandb/wandb
          path: wandb
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Run nightly tests
        run: |
          cd wandb
          pip install -e .
          CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py --dryrun trigger-nightly
          # CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py trigger-nightly --wait

  test-regression:
    name: Run regression tests
    needs: freeze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout wandb/wandb-testing
        uses: actions/checkout@v3
        with:
          repository: wandb/wandb-testing
          path: wandb-testing
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Run regression tests
        run: |
          cd wandb-testing
          pip install git+https://github.com/wandb/wandb@main#egg=wandb
          python --version
          
  make-release:
    name: Release
    environment: "release"
    needs:
      - test-nightly
      - test-regression
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main for ${{ github.event.inputs.bump-version-kind }} release
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Create release branch
        run: |
          python -m pip install --upgrade pip
          pip install bump2version
          
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          new_version="$(bump2version ${{ github.event.inputs.bump-version-kind }} --list | grep new_version | cut -d'=' -f2)"
          latest_tag="$(git tag -l --sort=committerdate 'v[0-9]*' | tail -n 1)"
          
          release_branch=release-${new_version}
          git checkout -b ${release_branch}
          git push --set-upstream origin ${release_branch}

          echo "release_branch=${release_branch}" >> $GITHUB_ENV
          echo "release_tag=v${new_version}" >> $GITHUB_ENV
          echo "previous_release_tag=${latest_tag}" >> $GITHUB_ENV

      - name: Create release notes
        uses: "actions/github-script@v5"
        with:
          script: |
            try {
              await github.rest.repos.createRelease({
                draft: true,
                generate_release_notes: false,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.release_tag,
                name: process.env.release_tag,
                target_commitish: process.env.release_branch,
                generate_release_notes: true,
                previous_tag_name: process.env.previous_release_tag,
              });
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Make release
        run: |
          # TODO use github actions to do the release
          echo ${current_branch}
          echo "${{ env.release_branch }}"

  unfreeze:
    name: Unfreeze main branch
    needs: make-release
    runs-on: ubuntu-latest
    steps:
      - name: Unfreeze main branch
        run: |
          curl -d "frozen=false&user_name=${{ github.actor }}&note=prep for release" -X POST https://www.mergefreeze.com/api/branches/${{ github.repository }}/main/?access_token=${{ secrets.COLDBEAR_TOKEN }}
