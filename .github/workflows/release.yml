name: Cut Release
run-name: cut sdk release triggered by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      bump-kind:
        type: choice
        required: true
        description: How to bump the current version
        default: "PATCH"
        options:
          - "MAJOR"
          - "MINOR"
          - "PATCH"

jobs:
  test-nightly:
    name: Run nightly tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout wandb/wandb
        uses: actions/checkout@v3
        with:
          repository: wandb/wandb
          path: wandb
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run nightly tests
        run: |
          cd wandb
          pip install -e .
          CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py --dryrun trigger-nightly
          # CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py trigger-nightly --wait
          exit 1

  verify-deploy:
    runs-on: ubuntu-latest
    environment: "release"
    needs: 
      - test-nightly
    steps:
      - name: check
        run: |
          echo "TEST"

  call-bump-version-workflow:
    name: Call bump-version workflow
    if: always()
    needs:
      - verify-deploy
    uses: ./.github/workflows/bump-version.yml
    with:
      branch: ${{ github.ref }}
      bump-kind: ${{ github.event.inputs.bump-kind }}

  create-release-notes:
    runs-on: ubuntu-latest
    # if: always()
    needs:
      - call-bump-version-workflow
    steps:
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          name: ${{ needs.call-bump-version-workflow.outputs.tag }}
          generateReleaseNotes: true
          tag: ${{ needs.call-bump-version-workflow.outputs.tag }}
          prerelease: false
          updateOnlyUnreleased: false
          commit: ${{ needs.call-bump-version-workflow.outputs.branch }}

  # call-python-package-workflow:
  #   name: Call python-package workflow
  #   uses: ./.github/workflows/python-package.yml
  #   needs:
  #     - call-bump-version-workflow
  #   with:
  #     branch: ${{ needs.call-bump-version-workflow.outputs.branch }}

  call-bump-dev-version-workflow:
    name: Call bump-dev-version workflow
    uses: ./.github/workflows/bump-dev-version.yml
    # if: always()
    needs:
      - call-bump-version-workflow
      - create-release-notes
      # - call-python-package-workflow
    with:
      branch: ${{needs.call-bump-version-workflow.outputs.branch}}
      # - name: Nudge to merge the Release PR to main and unfreeze the release branch
      #   run: |
      #     echo "Please check and merge the release PR to main and unfreeze the main branch"

  
    # runs-on: ubuntu-latest
    # outputs:
    #   # release-version: ${{ steps.cz.outputs.version }}
    #   release-branch: ${{ steps.cz.outputs.branch }}
    # steps:
    #   - uses: actions/checkout@v3
    #   # - uses: actions/setup-python@v4
    #   #   with:
    #   #     python-version: '3.9'
    #   - name: Open release PR (bump version and generate changelog)
    #     id: cz        
    #     uses: ./.github/workflows/bump-version.yml
    #     with:
    #       branch: ${{ github.ref }}
      # - name: Create Release Notes
      #   uses: ncipollo/release-action@v1
      #   with:
      #     allowUpdates: true
      #     draft: false
      #     name: v${{ steps.cz.outputs.version }}
      #     generateReleaseNotes: true
      #     tag: v${{ steps.cz.outputs.version }}
      #     prerelease: false
      #     updateOnlyUnreleased: false
      #     commit: ${{ steps.cz.outputs.branch }}
      # - name: Build and Publish
      #   uses: ./.github/workflows/python-package.yml
      #   with:
      #     branch: ${{steps.cz.outputs.branch}}
      # - name: Test Publish
      #   run: |
      #     pip install --index-url https://test.pypi.org/simple/ --no-deps mumbojumbo
      #     version=`python -c "import mumbojumbo as mj; print(mj.__version__)"`
      #     if [ $version != ${{ steps.cz.outputs.version }} ]; then
      #       echo "Version mismatch: $version != ${{ steps.cz.outputs.version }}"
      #       exit 1
      #     fi
      # - name: Bump dev version
      #   uses: ./.github/workflows/bump-dev-version.yml
      #   with:
      #     branch: ${{steps.cz.outputs.branch}}
      # - name: Nudge to merge the Release PR to main and unfreeze the release branch
      #   run: |
      #     echo "Please check and merge the release PR to main and unfreeze the main branch"
 
 
 # build-and-publish:
  #   name: Build and Publish
  #   environment: "release"
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs: prepare-release
  #   steps:  

  # post-release:
  #   name: Post Release Actions
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-and-publish
  #     - prepare-release
  #   if: always()
 
