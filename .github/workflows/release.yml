name: Cut Release
run-name: cut sdk release triggered by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      bump-kind:
        type: choice
        required: true
        description: How to bump the current version
        default: "PATCH"
        options:
          - "MAJOR"
          - "MINOR"
          - "PATCH"

jobs:
  test-nightly:
    name: Run nightly tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run nightly tests
        run: |
          cd wandb
          pip install .
          CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py --dryrun trigger-nightly
          # CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py trigger-nightly --wait
          
  prepare-release:
    name: Prepare Release
    environment: "release"
    if: always()
    needs:
      - test-nightly
    runs-on: ubuntu-latest
    # outputs:
    #   # release-version: ${{ steps.cz.outputs.version }}
    #   release-branch: ${{ steps.cz.outputs.branch }}
    steps:
      - name: Checkout main for current release
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Open release PR (bump version and generate changelog)
        id: cz        
        uses: ./.github/workflows/bump-version.yml
        with:
          branch: ${{ github.ref }}
      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          name: v${{ steps.cz.outputs.version }}
          generateReleaseNotes: true
          tag: v${{ steps.cz.outputs.version }}
          prerelease: false
          updateOnlyUnreleased: false
          commit: ${{ steps.cz.outputs.branch }}
      - name: Build and Publish
        uses: ./.github/workflows/python-package.yml
        with:
          branch: ${{steps.cz.outputs.branch}}
 
 
 # build-and-publish:
  #   name: Build and Publish
  #   environment: "release"
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs: prepare-release
  #   steps:  

  # post-release:
  #   name: Post Release Actions
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-and-publish
  #     - prepare-release
  #   if: always()
 
